{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","ui/Loader.jsx","ui/Button.jsx","components/Demo/RegistrationForm.jsx","components/Demo/votersinfos.jsx","components/owner.jsx","components/Demo/workflow.jsx","components/Demo/proposalForm.jsx","components/Errors/ErrorBoudaries.jsx","components/Demo/votingForm.jsx","components/Demo/cardProposals.jsx","components/Demo/winnerCard.jsx","components/Demo/cardRegistered.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","Error","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","abi","console","log","networks","address","Contract","err","error","useEffect","tryInit","require","events","handleChange","forEach","e","window","ethereum","on","removeListener","Provider","value","useEth","useContext","Loader","size","className","role","Button","loading","props","htmlType","disabled","RegistrationForm","setValue","comment","setError","setRegisteredAdress","useState","setLoading","handleSubmit","preventDefault","target","methods","addVoter","toString","send","from","then","response","VoterRegistered","prevArray","returnValues","voterAddress","catch","code","message","onSubmit","Alert","for","name","id","required","VotersInfo","votersInfo","setvotersInfo","hasVoted","isRegistered","votedProposalId","getVoter","call","GetOwner","setOwner","setcurrentAccount","getowner","undefined","owner","Workflow","workflow","setEvent","setWorkFlow","handleStartProposal","startProposalsRegistering","WorkflowStatusChange","newStatus","handleEndProposal","endProposalsRegistering","handleStartVoting","startVotingSession","handleEndVoting","endVotingSession","disable","currentWorkflow","onClick","ProposalForm","setProposalID","proposal","setProposal","description","voteCount","showProposal","parseInt","getOneProposal","addProposal","ProposalRegistered","proposalId","getRPCErrorMessage","open","stack","indexOf","close","lastIndexOf","j_s","substring","j","JSON","parse","Object","keys","reason","ErrorBoundary","errorInfo","this","setState","style","whiteSpace","componentStack","React","Component","VotingForm","ProposalId","setVote","Voted","Proposals","proposals","map","ProposalCard","memo","setResponse","getProposal","WinnerCard","winner","CardRegistered","registeredAdress","voterId","RegisteredCard","App","page","setPage","contratOwner","currentAccount","content","contentProposalCard","contentWinnerCard","contentCurrentRegisteredVoters","contentProposalCardRegisterPage","setWinner","RegisteredAdress","resultPage","setresultPage","NavBar","currentPage","account","onChange","navClass","tallyVotes","winningProposalID","winningId","href","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.cb2d9019.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nexport default function EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        const { abi } = artifact;\n        \n        console.log(\"artifact\")\n        console.log(artifact)\n\n        let address, contract;\n        try {\n          console.log(\"artifact networks\")\n          console.log(artifact.networks[networkID])\n          address = artifact.networks[networkID].address;\n         \n          contract = new web3.eth.Contract(abi, address);\n          console.log(contract)\n        } catch (err) {\n          console.error(err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract }\n        });\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/Voting.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","import React from 'react'\n\nexport function Loader({ size }) {\n    return <div className={\"spinner-border spinner-border-\" + size} role=\"status\">\n        <span className=\"sr-only\"></span>\n    </div>\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Loader } from './Loader'\n\nexport function Button({ children, type = 'primary', loading = false, ...props }) {\n    let className = 'btn'\n    if (type === 'submit') {\n        className += ' btn-primary'\n    } else {\n        className += ' btn-' + type\n    }\n    let htmlType = null\n    if (type === 'submit') {\n        htmlType = 'submit'\n    }\n    return <button className={className} type={htmlType} disabled={loading} {...props}>\n        {loading ? <><Loader size=\"sm\" /> Chargement...</> : children}\n    </button>\n}\n\nButton.propTypes = {\n    children: PropTypes.node.isRequired,\n    type: PropTypes.string,\n    loading: PropTypes.bool\n}","import { useState } from \"react\";\nimport { useEth } from \"../../contexts/EthContext\";\nimport { Button } from \"../../ui/Button\";\nimport { Alert } from \"react-bootstrap\";\n\nexport default function RegistrationForm({ error, comment, setValue, setError , setRegisteredAdress}) {\n  const { state: { contract, accounts } } = useEth();\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true)\n    const data = e.target[0].value;\n    await contract.methods.addVoter(data.toString()).send({ from: accounts[0] }).then(response => {\n      setLoading(false);\n      setValue(response.events.VoterRegistered);\n      setRegisteredAdress(prevArray => [...prevArray, response.events.VoterRegistered.returnValues.voterAddress] )\n    }).catch(error => {\n    \n     if(error.code == \"INVALID_ARGUMENT\"){\n        setError(error.code)\n      } else {\n        setError(error.message)\n      }\n      setLoading(false);\n    });\n    setLoading(false);\n  }\n\n  return (<div className=\"container-fluid\" >\n    <div className=\"card bg-light text-dark border-grey\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n        {error ? <Alert className=\"alert alert-warning\"> {error} </Alert> : null}\n          <label for=\"exampleInputEmail1\">Enter an Eth address to register a new voter </label>\n          <input type=\"text\" name=\"address\" id=\"address\" className=\"form-control\" required />\n        </div>\n        <div className=\"btn-group\">\n        <Button type=\"submit\" loading={loading}> Register the Voter </Button>\n        </div>\n      </form>\n    </div>\n  </div>\n  );\n}\n\n","import { useState } from \"react\";\nimport {useEth} from \"../../contexts/EthContext\";\nimport { Button } from \"../../ui/Button\";\nimport { Alert } from \"react-bootstrap\";\n\nexport default function VotersInfo({ votersInfo, setvotersInfo, setError }) {\n  const { state: { contract, accounts } } = useEth();\n\n  console.log(votersInfo);\n  let {hasVoted, isRegistered, votedProposalId } = votersInfo;\n  const [loading, setLoading] = useState(false)\n\n  const handleSubmit = async (e)  => {\n      e.preventDefault(); \n      setLoading(true)\n      const data = e.target[0].value;\n      await contract.methods.getVoter(data).call({ from: accounts[0] }).then(response => {\n          setvotersInfo(response);\n          setLoading(false)\n      }).catch(error => {\n        if(error.code === 32603){\n          setError(\"you are not a voter\")\n          setLoading(false)\n        } else {\n          setError(error.message)\n          setLoading(false)\n        }\n\n        setLoading(false)\n      }); \n      }\n    \n  return (\n    <div className=\"container-fluid\" >\n    <div className=\"card bg-light text-dark border-grey\">\n\n      {!votersInfo.isRegistered ? <Alert className=\"alert alert-warning\"> The voter is NOT registered yet </Alert> : null}\n      {votersInfo.isRegistered && !hasVoted? <Alert className=\"alert alert-warning\"> The voter is registered but did not vote yet </Alert> : null}\n      {votersInfo.hasVoted? <Alert className=\"alert alert-warning\"> The voter has vote for {votersInfo.votedProposalId}  </Alert> : null}\n        <form  onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n        <label for=\"title\">Enter the Eth address : </label>\n            <input type=\"text\" name=\"address\" id=\"address\" className=\"form-control\" required />\n            <small id=\"help\" className=\"form-text text-muted\">Enter the Eth address of a voter to get status</small>\n        </div>\n        <Button type=\"submit\" loading={loading}> Get Voters Status </Button>\n    </form>\n    </div>\n    </div>\n   \n  );\n}\n\n","import React, { PureComponent } from 'react'\nimport {useEth} from \"../contexts/EthContext\";\nimport { useEffect } from 'react';\n\nexport default function GetOwner({ setOwner, setcurrentAccount}){\n    const { state: { contract, accounts } } = useEth();\n \n    const getowner = async () => { \n        let response = undefined;\n        try {\n        response = await contract.methods.owner().call();\n        setcurrentAccount(accounts);\n        setOwner(response);\n        console.log(\"responseOwner\")\n        console.log(response)\n        } catch (err) {\n          console.log(err);\n        }\n      };\n        \n      useEffect(() => {\n        if(contract){\n          getowner();\n        }\n      \n    }, [contract]);\n \n}\n","import React from \"react\";\nimport { Button } from \"../../ui/Button\";\nimport { useEth } from \"../../contexts/EthContext\";\nimport { useState } from \"react\";\n\nexport default function Workflow({ workflow, setEvent, setWorkFlow, setError }) {\n\n    const [loading, setLoading] = useState(false);\n    const { state: { contract, accounts } } = useEth();\n\n    const handleStartProposal = async () => {\n        setLoading(true);\n \n            await contract.methods.startProposalsRegistering().send({ from: accounts[0] }).then(response => {\n                setWorkFlow(response.events.WorkflowStatusChange.returnValues.newStatus);\n                setEvent(response.events.WorkflowStatusChange);\n            }).catch(error => {\n\n                if(error.code ===4001){\n                    setError(error.message)\n                } else {\n                    setError(\"Transaction reverted by EVM, please ensure you choose the right next\")\n\n                }\n              });\n        setLoading(false);\n    }\n\n    const handleEndProposal = async () => {\n        setLoading(true);\n  \n            await contract.methods.endProposalsRegistering().send({ from: accounts[0] }).then(response => {\n                setWorkFlow(response.events.WorkflowStatusChange.returnValues.newStatus);\n                setEvent(response.events.WorkflowStatusChange);\n                console.log(response.events.WorkflowStatusChange.returnValues.newStatus);\n            }).catch(error => {\n                if(error.code ===4001){\n                    setError(error.message)\n                } else {\n                    setError(\"Transaction reverted by EVM, please ensure you choose the right next\")\n\n                }\n\n              });\n\n        setLoading(false);\n    }\n\n    const handleStartVoting = async () => {\n        setLoading(true);\n \n            await contract.methods.startVotingSession().send({ from: accounts[0] }).then(response => {\n                console.log(response.events.WorkflowStatusChange.returnValues.newStatus);\n                setWorkFlow(response.events.WorkflowStatusChange.returnValues.newStatus);\n                setEvent(response.events.WorkflowStatusChange);\n\n            }).catch(error => {\n                if(error.code ===4001){\n                    setError(error.message)\n                } else {\n                    setError(\"Transaction reverted by EVM, please ensure you choose the right next\")\n                }\n\n              });\n        setLoading(false);\n    }\n\n    const handleEndVoting = async () => {\n        setLoading(true);\n            await contract.methods.endVotingSession().send({ from: accounts[0] }).then(response => {\n                setWorkFlow(response.events.WorkflowStatusChange.returnValues.newStatus);\n                setEvent(response.events.WorkflowStatusChange);\n         \n            }).catch(error => {\n                if(error.code ===4001){\n                    setError(error.message)\n                } else {\n                    setError(\"Transaction reverted by EVM, please ensure you choose the right next\")\n                }\n              });\n        setLoading(false);\n    }\n\n    const disable = function ({workflow, currentWorkflow}) {\n        console.log(workflow)\n        console.log(currentWorkflow)\n        if( workflow == currentWorkflow ) {\n            return false;\n        } else  {\n            return true\n        }\n    }   \n\n \n\n\n    return (<>\n        <div className=\"container-fluid\" >\n            <div className=\"card bg-light text-dark border-grey\">\n   \n                <div className=\"btn-group\">\n                  <Button loading={loading} disabled={disable({workflow, currentWorkflow: 0})} onClick={() => handleStartProposal()} >Start Proposal </Button> \n                </div> \n                ⏬\n                <div className=\"btn-group\">\n                    <Button loading={loading} disabled={disable({workflow, currentWorkflow: 1})} onClick={() => handleEndProposal()} >End Proposal </Button>  \n                </div> \n                ⏬\n                <div className=\"btn-group\">\n                    <Button loading={loading} disabled={disable({workflow, currentWorkflow: 2})} onClick={() => handleStartVoting()} >Start Voting </Button>  \n                </div> \n                ⏬\n                <div className=\"btn-group\">\n                    <Button loading={loading} disabled={disable({workflow, currentWorkflow: 3 })} onClick={() => handleEndVoting()} >End Voting </Button>\n                </div>\n            </div>\n        </div>\n    </>)\n}","import { useEffect, useState } from \"react\";\nimport {useEth} from \"../../contexts/EthContext\";\nimport { Button } from \"../../ui/Button\";\n\nexport default function ProposalForm({ setValue, setProposalID, setError}) {\n  const { state: { contract, accounts } } = useEth();\n  const [inputValue, setInputValue] = useState(\"\");\n  let [proposal, setProposal] = useState([])\n  let {description, voteCount} = proposal;\n  const [loading, setLoading] = useState(false)\n\n    const showProposal = async (e) => {\n      e.preventDefault(); \n      setLoading(true)\n      const data = parseInt(e.target[0].value, 10);\n\n      await contract.methods.getOneProposal(data).call({ from: accounts[0] }).then(response => {\n        setProposal(response)\n        console.log(response)\n      }).catch(error => {\n        console.log(\"erreur dans async proposal form\")\n        console.error(error.message);\n        setError(error.message)\n      }); \n      setLoading(false);\n    }\n\n    \n  const handleSubmit = async (e)  => {\n      e.preventDefault(); \n      setLoading(true)\n      const data = e.target[0].value;\n      \n        await contract.methods.addProposal(data.toString()).send({ from: accounts[0] }).then(response => {\n          setValue(response.events.ProposalRegistered)\n          setProposalID(prevArray => [...prevArray, parseInt(response.events.ProposalRegistered.returnValues.proposalId, 10)] )\n        }).catch(error => {\n          setError(getRPCErrorMessage(error))\n        }); \n        setLoading(false);\n      }\n\n  function getRPCErrorMessage(err){\n    var open = err.stack.indexOf('{')\n    var close = err.stack.lastIndexOf('}')\n    var j_s = err.stack.substring(open, close + 1);\n    var j = JSON.parse(j_s);\n    var reason = j.data[Object.keys(j.data)[0]].reason;\n    return reason;\n}\n    \n  return (\n    <div className=\"container-fluid\" >\n      <div className=\"card bg-light text-dark border-grey\">\n\n    <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label for=\"exampleInputEmail1\">Enter a proposal</label>\n            <input type=\"text\" name=\"proposal\" id=\"proposal\" className=\"form-control\" required />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Please enter a vote proposition.</small>\n            </div>\n        <Button type=\"submit\" loading={loading}> Enter a proposal </Button>  \n    \n    </form> \n\n      <form  onSubmit={showProposal}>\n        <div className=\"form-group\">\n        <label for=\"exampleInputPassword1\">Enter a proposal ID</label>\n            <input type=\"text\" name=\"proposal\" id=\"proposal\" className=\"form-control\" required />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Please write a proposition number to see its description.</small>\n          </div>\n        <Button type=\"submit\" loading={loading}>Get the proposal</Button>\n    </form>\n    {description ? <Alert> The proposal : {description} has yet {voteCount} vote(s)</Alert> : null}\n    </div>\n  </div>\n\n  );\n}\n\n\nexport function Alert({ children }) {\n  return <div className=\"alert alert-info\">\n      {children}\n  </div>\n}","import React from \"react\";\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { error: null, errorInfo: null };\n    }\n    \n    componentDidCatch(error, errorInfo) {\n      // Catch errors in any components below and re-render with error message\n      this.setState({\n        error: error,\n        errorInfo: errorInfo\n      })\n      // You can also log error messages to an error reporting service here\n    }\n    \n    render() {\n      if (this.state.errorInfo) {\n        // Error path\n        return (\n          <div>\n            <h2>Something went wrong.</h2>\n            <details style={{ whiteSpace: 'pre-wrap' }}>\n              {this.state.error && this.state.error.toString()}\n              <br />\n              {this.state.errorInfo.componentStack}\n            </details>\n          </div>\n        );\n      }\n      // Normally, just render children\n      return this.props.children;\n    }  \n  }\n  ","import { useState } from \"react\";\nimport { useEth } from \"../../contexts/EthContext\";\nimport { Button } from \"../../ui/Button\";\n\nexport default function VotingForm({ setValue, setError }) {\n  const { state: { contract, accounts } } = useEth();\n  const [loading, setLoading] = useState(false)\n  let [proposal, setProposal] = useState([])\n\n  let { description, voteCount } = proposal;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError(null)\n    setLoading(true)\n    const data = parseInt(e.target[0].value, 10);\n    let ProposalId = null;\n    // console.log(e.target)\n\n    await contract.methods.setVote(data).send({ from: accounts[0] }).then(response => {\n      ProposalId = parseInt(response.events.Voted.returnValues.proposalId, 10)\n      setValue(response.events.Voted)\n    }).catch(error => {\n      console.log(\"erreur dans async setVote\")\n      console.error(error);\n      setError(error.message)\n    });\n\n    if (ProposalId != null) {\n      await contract.methods.getOneProposal(ProposalId).call({ from: accounts[0] }).then(response => {\n        setProposal(response)\n      }).catch(error => {\n        console.log(\"erreur dans async getOneProposal\")\n        console.error(error);\n        setError(error.message)\n      });\n    }\n\n    setLoading(false)\n  }\n\n  return (<>\n\n    <div className=\"container-fluid\" >\n      <div className=\"card bg-light text-dark border-grey\">\n\n        <form onSubmit={handleSubmit}>\n\n          {description ? <Alert> The proposal : {description} has now {voteCount} vote(s)</Alert> : null}\n          <div className=\"form-group\">\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Vote for one of the proposition down below</small>\n            <input type=\"text\" name=\"vote\" id=\"vote\" className=\"form-control\" required />\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Vote using the proposition number.</small>\n          </div>\n          <Button type=\"submit\" loading={loading}> Enter an index to vote for a proposal </Button>\n        </form>\n      </div>\n    </div>\n  </>\n  );\n}\n\n\n\nexport function Alert({ children }) {\n  return <div className=\"alert alert-info\">\n    {children}\n  </div>\n}","import React, { memo } from 'react'\n//import PropTypes from 'prop-types'\nimport { Loader } from '../../ui/Loader'\nimport { useEffect, useState } from \"react\";\nimport {useEth} from \"../../contexts/EthContext\";\nimport { Button } from \"../../ui/Button\";\n\nexport default function Proposals({ proposals, setError }) {\n  \n    if (proposals === [] || proposals === null || proposals === undefined ) {\n        return <Loader />\n    }\n\n     return <div className=\"row\">\n        {proposals.map(proposalId => <div className=\"col-md-4 mb-4\" key={proposalId}>\n          <ProposalCard proposalId={proposalId} setError={setError}/>\n        </div>)}\n    </div>\n}\n\nconst ProposalCard = memo(function ({ proposalId , setError}) {\n    const { state: { contract, accounts } } = useEth();\n    let [response, setResponse] = useState(false);\n\n    const getProposal = async () => {\n\n            await contract.methods.getOneProposal(proposalId).call({ from: accounts[0] }).then(response => {\n              setResponse(response)\n              console.log(response)\n            }).catch(error => {\n                console.log(\"erreur dans async winner card\")\n                console.error(error);\n                setError(error.message)\n              });\n        \n    }\n\n\n\n    if(proposalId !== null) {\n        getProposal();\n    }\n \n    return <div className=\"card bg-light text-dark border-grey\">\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">Vote proposition N° {proposalId}</h5>\n            <p className=\"card-text\">Proposition : {response.description}</p>\n            <p className=\"card-text\">Vote count : {response.voteCount}</p>\n            <p className=\"card-text\">To vote for this proposition, please enter {proposalId} when voting! ❤️ </p>\n        </div>\n    </div>\n})","import React, { memo } from 'react'\n//import PropTypes from 'prop-types'\nimport { Loader } from '../../ui/Loader'\nimport { useEffect, useState } from \"react\";\nimport {useEth} from \"../../contexts/EthContext\";\n\n\nexport default function WinnerCard({ winner , setError}) {\n  \n     return <div className=\"row\">\n        {<div className=\"col-md-4 mb-4\" key={winner}>\n          <ProposalCard winner={winner} setError={setError}/>\n        </div>}\n    </div>\n}\n\nconst ProposalCard = memo(function ({ winner , setError}) {\n    const { state: { contract, accounts } } = useEth();\n    let [response, setResponse] = useState(false);\n\n    const getProposal = async () => {\n   \n            await contract.methods.getOneProposal(winner).call({ from: accounts[0] }).then(response => {\n              setResponse(response)\n              console.log(response)\n            }).catch(error => {\n                console.log(\"erreur dans async ProposalCard\")\n                console.error(error);\n                setError(error.message)\n              });\n    }\n    if(winner !== false) {\n        getProposal();\n    }\n \n    return <div className=\"container-fluid\">\n        <div className=\"card bg-light text-dark border-grey\">\n        <div className=\"card-body\">\n            <h5 className=\"card-title\"> 🎉 Here is the winner : 🎉 </h5>\n            <p className=\"card-text\">Winner Proposition : {response.description}</p>\n            <p className=\"card-text\">This proposal won with : {response.voteCount} votes</p>\n        </div>\n        </div>\n    </div>\n})","import React, { memo } from 'react'\n\nexport function CardRegistered({ registeredAdress }) {\n  \n     return <div className=\"row\">\n        {registeredAdress.map(voterId => <div className=\"col-md-4 mb-4\" key={voterId}>\n          <RegisteredCard voterId={voterId} />\n        </div>)}\n    </div>\n}\n\nconst RegisteredCard = memo(function ({ voterId }) {\n    return <div className=\"card bg-light text-dark border-grey\">\n        <div className=\"card-body\">\n            <h5 className=\"card-title\"> Voter successfully registered 🥳 </h5>\n            <p className=\"card-text\"> Address : {voterId} </p>\n        </div>\n    </div>\n})","import {useEth , EthProvider } from \"./contexts/EthContext\";\nimport { useState } from \"react\";\nimport RegistrationForm from \"./components/Demo/RegistrationForm\";\nimport \"./App.css\";\nimport VotersInfo from \"./components/Demo/votersinfos\";\nimport GetOwner from \"./components/owner\";\nimport Workflow from \"./components/Demo/workflow\";\nimport ProposalForm from \"./components/Demo/proposalForm\";\nimport ErrorBoundary from \"./components/Errors/ErrorBoudaries\"\nimport VotingForm from \"./components/Demo/votingForm\";\nimport Proposals from \"./components/Demo/cardProposals\";\nimport { Button } from \"./ui/Button\";\nimport WinnerCard from \"./components/Demo/winnerCard\";\nimport { Alert } from \"react-bootstrap\";\nimport { CardRegistered } from \"./components/Demo/cardRegistered\";\nimport { useEffect } from \"react\";\n\nexport default function App() {\n\n    //connaitre sur quelle pages nous sommes\n    let [page, setPage] = useState('registration')\n    //get registration event and addresses\n    let [value, setValue] = useState(false);\n    //contract addresses\n    let [contratOwner, setOwner] = useState(false);\n    let [currentAccount, setcurrentAccount] =  useState(\"\");\n    //get inforamtion related to the voters\n    let [votersInfo, setvotersInfo] = useState(false);\n    let content = null\n    let contentProposalCard = null\n    let contentWinnerCard = null;\n    let contentCurrentRegisteredVoters = null;\n    let contentProposalCardRegisterPage = null;\n    let [events, setEvent] = useState(0);\n    let [workflow, setWorkFlow] = useState(0);\n    let [proposalId, setProposalID] = useState([]);\n    let [winner, setWinner] = useState(false)\n    let [RegisteredAdress, setRegisteredAdress] = useState([]);\n    let [resultPage, setresultPage] =  useState(false)\n\n    //gestion des erreurs \n    let [error, setError] = useState();\n   \n   const pages = () => { if (page === 'registration') {\n        content = contratOwner == currentAccount ? <RegistrationForm setRegisteredAdress={setRegisteredAdress} comment={value} setError={setError} setValue={setValue} ></RegistrationForm> : null\n        contentCurrentRegisteredVoters = <CardRegistered registeredAdress={RegisteredAdress} ></CardRegistered>\n       } else if (page === 'workflow') {\n        content = contratOwner == currentAccount ? <Workflow workflow={workflow} setWorkFlow={setWorkFlow} setError={setError} setEvent={setEvent} ></Workflow> : null\n       } else if (page === 'getvoters') {\n        content =  <VotersInfo setvotersInfo={setvotersInfo} setError={setError} votersInfo={votersInfo}> </VotersInfo>\n       } else if (page === 'proposition') {\n        content = <ProposalForm setValue={setValue} setError={setError} setProposalID={setProposalID}></ProposalForm>\n        contentProposalCard = <Proposals setError={setError} proposals={proposalId} ></Proposals>\n       } else if (page === 'vote') {\n        content =  <VotingForm setError={setError} setValue={setValue}/>\n        contentProposalCard = <Proposals setError={setError} proposals={proposalId} ></Proposals>\n       } else if (page === 'results') {\n        contentWinnerCard = <WinnerCard setError={setError} winner={winner} ></WinnerCard>\n     } else if (page === 'registeredVoters') {\n       contentCurrentRegisteredVoters = <CardRegistered registeredAdress={RegisteredAdress} ></CardRegistered>\n       contentProposalCardRegisterPage = <Proposals setError={setError} proposals={proposalId} ></Proposals>\n    }\n    }   \n\n           pages();\n   \n    \n//attion ajout de alert error\n  return (\n    <ErrorBoundary>\n    <EthProvider setError={setError}>\n      <GetOwner setOwner={setOwner} setcurrentAccount={setcurrentAccount}> </GetOwner>\n      <NavBar currentPage={page} resultPage={resultPage} setError={setError} setresultPage={setresultPage} workflow={workflow} setWinner={setWinner} onClick={setPage} setWorkFlow={setWorkFlow} contratOwner={contratOwner} account={currentAccount}/>\n      <div id=\"App\" >\n        <div className=\"container\">\n        {error ? <Alert className=\"alert alert-warning\"> {error} </Alert> : null}\n        {content}\n        {contentProposalCard}\n        {contentCurrentRegisteredVoters}\n        {contentWinnerCard}\n        <br />\n        {contentProposalCardRegisterPage}\n        </div>\n      </div>\n    </EthProvider>\n    </ErrorBoundary>\n  );\n}\n\n\nfunction NavBar({ currentPage, onClick , contratOwner, account, workflow, setWorkFlow, setWinner, resultPage, setresultPage, setError}) {\n\n   const { state: { contract, accounts } } = useEth();\n \n  const [loading, setLoading] = useState(false)\n\n   const onChange = function () {\n    setError(null)\n    //console.log(\"I'm in\")\n  } \n\n  const navClass = function (page) {\n      let className = 'nav-item'\n      if (page === currentPage) {\n          className = ' active'\n      }\n      return className;\n  }\n\n  useEffect(function (currentPage) {\n      onChange(setError(null))\n   }, [currentPage])\n\n\n  const handleSubmit = async (e)  => {\n      e.preventDefault(); \n      setLoading(true)\n         \n     await contract.methods.tallyVotes().send({ from: accounts[0] }).then(response => {\n      //cencer passer à 5\n         setWorkFlow(response.events.WorkflowStatusChange.returnValues.newStatus)\n         console.log(\" tally votes pour recup nextstatus\")\n          console.log(response.events.WorkflowStatusChange.returnValues.newStatus)\n        }).catch(error => {\n          console.log(\"erreur dans async tally vote\")\n          console.error(error);\n          setError(error.message)\n        });\n      \n        await contract.methods.winningProposalID().call({ from: accounts[0] }).then(winningId => {\n          console.log(\"winningId\")\n          console.log(winningId)\n          setWinner(winningId);\n          //si la requete passe alors j'affiche l'onglet resultat\n          setresultPage(true);\n        }).catch(error => {\n          console.log(\"erreur dans async getwinning proposal\")\n          console.error(error);\n          setError(error.message)\n          setLoading(false);\n        });\n    setLoading(false);\n    }\n\n  return <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-10\">\n      <a href=\"#recipes\" className=\"navbar-brand\" onClick={() => onClick('registration')}>MyVotingDApp 🗳️</a>\n      <ul className=\"navbar-nav mr-auto\">\n        { contratOwner == account && workflow == '0' ? <li className={navClass('registration')}>\n              <a href=\"#registration\" className=\"nav-link\" onClick={() => onClick('registration')} onChange={onChange}>Registration</a>\n          </li> : null }\n          { contratOwner == account ? <li className={navClass('workflow')}>\n              <a href=\"#workflow\" className=\"nav-link\" onClick={() => onClick('workflow')}>Workflow</a>\n          </li> : null }\n          <li className={navClass('getvoters')}>\n              <a href=\"#getvoters\" className=\"nav-link\" onClick={() => onClick('getvoters')}>Voters Informations</a>\n          </li> \n          { workflow == '1'?\n         <li className={navClass('proposition')}>\n              <a href=\"#proposition\" className=\"nav-link\" onClick={() => onClick('proposition')}> Make a Proposal</a>\n          </li>  : null }\n          { workflow == '3'?\n          <li className={navClass('vote')}>\n              <a href=\"#vote\" className=\" nav-link\" onClick={() => onClick('vote')}>Vote</a>\n          </li> : null }\n        {resultPage ? \n          <li className={navClass('results')}>\n              <a href=\"#vote\" className=\" nav-link\" onClick={() => onClick('results')}>Results</a>\n          </li> : null }\n          <li className={navClass('registeredVoters')}>\n              <a href=\"#vote\" className=\" nav-link\" onClick={() => onClick('registeredVoters')}> Registered Voters</a>\n          </li> \n        </ul>\n        <button type=\"button\" className=\"btn btn-outline-success\">Your account is {account}</button>\n      \n      {workflow == '0' ? <button type=\"button\" className=\"btn btn-outline-warning\"> State : Registration</button> : null}\n      {workflow == '1' ? <button type=\"button\" className=\"btn btn-outline-warning\"> State : Start Proposal Registration</button> : null}\n      {workflow == '2' ? <button type=\"button\" className=\"btn btn-outline-warning\"> State : End of Proposal Registration</button> : null}\n      {workflow == '3' ? <button type=\"button\" className=\"btn btn-outline-warning\"> State : Start Voting</button> : null}\n      {workflow == '4' ? <button type=\"button\" className=\"btn btn-outline-warning\"> State : End Voting</button> : null}\n      {workflow == '5' ? <button type=\"button\" className=\"btn btn-outline-primary\"> Vote were tallied: please check the results &#128521; </button> : null}\n     \n      {workflow == '4' ? <Button type=\"submit\" onClick={handleSubmit} loading={loading}> Tally voting </Button> : null}\n  </nav>\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}